---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: my-argocd-app-with-chart  # name of the app
  namespace: argocd # namespace of the app
  annotations:
    argocd-image-updater.argoproj.io/image-list: argocd-app=docker.io/devopssean/zta_demo_app:1.x
    argocd-image-updater.argoproj.io/argocd-app.update-strategy: semver
    argocd-image-updater.argoproj.io/argocd-app.helm-image-tag-spec: image.tag
    argocd-image-updater.argoproj.io/argocd-app.helm-image-name-spec: image.repository
    notifications.argoproj.io/subscribe.on-sync-succeeded.slack: alerts
    notifications.argoproj.io/subscribe.on-sync-failed.slack: alerts
    notifications.argoproj.io/subscribe.on-health-degraded.slack: alerts
    notifications.argoproj.io/subscribe.on-deployed.slack: alerts
  finalizers:
    - resources-finalizer.argocd.argoproj.io/foreground # this will make argocd delete the resources when the app is deleted

spec:
  project: default # project to deploy to
  source:
    repoURL: http://chartmuseum.chartmuseum.svc.cluster.local:8080
    targetRevision: 0.2.0 
    chart: my-argocd-app # chart name in Chart.yaml
  destination:
    server: https://kubernetes.default.svc # kubernetes server
    namespace: argocd-demo-ns-with-chart # namespace to deploy to 
    helm:
      valueFiles:
        - values.yaml
  syncPolicy:
    syncOptions:
      - CreateNamespace=true # create namespace if it does not exist
      - Validate=true # if the deployment has any issues, it will not be deployed
      - PrunePropagationPolicy=Foreground # this will run the prune operation in the foreground
      - PruneLast=true # this will ensure that the last resourc is pruned
    automated:
      prune: true # prune resources that are not in the repo
      selfHeal: true # disregard any changes made to the cluster directly
      allowEmpty: false # do not allow empty sync
